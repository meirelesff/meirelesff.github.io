<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fernando Meireles on Fernando Meireles</title>
    <link>https://fmeireles.com/</link>
    <description>Recent content in Fernando Meireles on Fernando Meireles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019 Fernando Meireles</copyright>
    <lastBuildDate>Fri, 23 Aug 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blog</title>
      <link>https://fmeireles.com/blog/posts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/posts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>rscielo: um scraper em R para extrair informações do Scielo</title>
      <link>https://fmeireles.com/blog/rstats/rscielo-um-scraper-para-extrair-dados-scielo/</link>
      <pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/rstats/rscielo-um-scraper-para-extrair-dados-scielo/</guid>
      <description>

&lt;p&gt;Acaba de ser aceito no CRAN um pacote que &lt;a href=&#34;https://github.com/silvadenisson&#34; target=&#34;_blank&#34;&gt;Denisson
Silva&lt;/a&gt;, &lt;a href=&#34;https://github.com/antrologos&#34; target=&#34;_blank&#34;&gt;Rogério
Barbosa&lt;/a&gt; e eu decidimos criar há algum
tempo: o &lt;a href=&#34;https://cran.r-project.org/package=rscielo&#34; target=&#34;_blank&#34;&gt;rscielo&lt;/a&gt;. Resumidamente, o pacote é um &lt;em&gt;scraper&lt;/em&gt; para extrair
informações de periódicos hospedados no &lt;a href=&#34;https://www.scielo.org&#34; target=&#34;_blank&#34;&gt;Scientific Electronic Library
Online&lt;/a&gt;, Scielo. Por
meio dele, é possível coletar metadados, número de autores e
&lt;em&gt;abstract&lt;/em&gt; de todos os artigos já publicados por um determinado
periódico; contagem de citações recebidas e dadas; texto integral de
artigos e resenhas em formato adequado para &lt;em&gt;text mining&lt;/em&gt;; entre inúmeras outras.
Todas essas informações são retiradas diretamente do repositório do Scielo
e organizadas em formato de banco de dados (i.e. &lt;code&gt;data.frame&lt;/code&gt; e
&lt;code&gt;tibble&lt;/code&gt;), facilitando a análise e exportação para
qualquer formato.&lt;/p&gt;

&lt;h1 id=&#34;como-usar&#34;&gt;Como usar&lt;/h1&gt;

&lt;p&gt;Usar o &lt;code&gt;rscielo&lt;/code&gt; é bastante simples.
Antes de mais nada, é necessário instalá-lo, o que pode ser feito a
partir do console com:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;rscielo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Alternativamente, use o seguinte código para instalar a versão &lt;em&gt;pre-release&lt;/em&gt; no
&lt;a href=&#34;https://github.com/meirelesff/rscielo&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!require(remotes)) install.packages(&amp;quot;remotes&amp;quot;)
remotes::install_github(&amp;quot;meirelesff/rscielo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Com o pacote instalado, podemos extrair metadados de todos
os artigos publicados na última edição de um periódico qualquer com a
função &lt;code&gt;get_journal&lt;/code&gt;. Por exemplo, o código a seguir retorna um banco
com informações da última edição da &lt;a href=&#34;http://www.scielo.br/scielo.php?script=sci_serial&amp;amp;pid=0103-3352&amp;amp;lng=en&amp;amp;nrm=iso&#34; target=&#34;_blank&#34;&gt;Revista Brasileira de Ciência
Política&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Carrega o pacote
library(rscielo)

# Baixa dados da ultima edicao da RBCP
ult_edicao &amp;lt;- get_journal(&amp;quot;0103-3352&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## 
## Scraping data from: Revista Brasileira de Ciência Política
## 
## May take a while...

## 
## Done.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Poucos segundos depois, todos os metadados dos 8 artigos publicados na
última edição da RBCP são recuperados. Ao todo, &lt;code&gt;get_journal&lt;/code&gt; extrai 23
variáveis, incluindo nome das autoras, título dos artigos, &lt;em&gt;abstract&lt;/em&gt; em
diferentes línguas, número de páginas, entre outras informações úteis
para análises bibliométricas e para revisões sistemáticas de literatura.&lt;/p&gt;

&lt;p&gt;Para ter um panorama do banco, &lt;code&gt;rscielo&lt;/code&gt; também inclui um método
&lt;code&gt;summary&lt;/code&gt; que pode ser usado assim:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(ult_edicao)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## ### JOURNAL: Revista Brasileira de Ciência Política
## 
## 
##  Total number of articles:  8 
##  Total number of articles (reviews excluded):  7
## 
##  Mean number of authors per article:  2 
##  Mean number of pages per article:  31.29
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A única informação que deve ser passada para &lt;code&gt;get_journal&lt;/code&gt;, e para a
maioria das outras do pacote, é o ISSN do periódico de interesse
hospedado no Scielo. Caso não saiba como obter essa informação (o ISSN
normalmente pode ser encontrado na &lt;em&gt;home&lt;/em&gt; de cada periódico), use
&lt;code&gt;get_journal_list&lt;/code&gt; para obter uma lista de todos os periódicos mantidos
pelo Scielo e seus respectivos ISSN.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_journal_list()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Especificando o argumento &lt;code&gt;last_issue = FALSE&lt;/code&gt;, também é possível usar
&lt;code&gt;get_journal&lt;/code&gt; para baixar metadados de todos os artigos já publicados
por um periódico:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bpsr &amp;lt;- get_journal(&amp;quot;0103-3352&amp;quot;, last_issue = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;outras-funcionalidades&#34;&gt;Outras funcionalidades&lt;/h1&gt;

&lt;h2 id=&#34;artigos&#34;&gt;Artigos&lt;/h2&gt;

&lt;p&gt;Para além das funções &lt;code&gt;_journal&lt;/code&gt;, o &lt;code&gt;rscielo&lt;/code&gt; também permite pegar
metadados, texto integral, referências bibliográficas e notas de rodapé
de qualquer artigo hospedado na plataforma Scielo. Com a URL do artigo
desejado, basta usar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Metadados de um artigo
get_article_meta(&amp;quot;http://www.scielo.br/scielo.php?script=sci_arttext&amp;amp;pid=S0103-33522019000100007&amp;quot;)

#Texto de um artigo
get_article(&amp;quot;http://www.scielo.br/scielo.php?script=sci_arttext&amp;amp;pid=S0103-33522019000100007&amp;quot;)

# Notas de um artigo
get_article_footnotes(&amp;quot;http://www.scielo.br/scielo.php?script=sci_arttext&amp;amp;pid=S0103-33522019000100007&amp;quot;)

# Bibliografia de um artigo
get_article_references(&amp;quot;http://www.scielo.br/scielo.php?script=sci_arttext&amp;amp;pid=S0103-33522019000100007&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Em todas essas funções &lt;code&gt;_article&lt;/code&gt;, também é possível passar o ID do
artigo que se quer raspar. Nos exemplos acima, essa informação pode ser
encontrada depois de &lt;code&gt;&amp;amp;pid=&lt;/code&gt; (i.e., &lt;code&gt;S0103-33522019000100007&lt;/code&gt;), ou
obtida por meio da função
&lt;code&gt;get_article_id&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_article_id(&amp;quot;http://www.scielo.br/scielo.php?script=sci_arttext&amp;amp;pid=S0103-33522019000100007&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;S0103-33522019000100007&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por padrão, a função &lt;code&gt;get_journal&lt;/code&gt; já retorna o ID de cada um dos
artigos obtidos.&lt;/p&gt;

&lt;h2 id=&#34;citações&#34;&gt;Citações&lt;/h2&gt;

&lt;p&gt;Para saber quantas citações um determinado periódico recebeu ou concedeu
ao longo do tempo, o &lt;code&gt;rscielo&lt;/code&gt; a função &lt;code&gt;get_journal_metrics&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Citacoes da RBCP
cit &amp;lt;- get_journal_metrics(&amp;quot;0103-3352&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Com esses dados salvos, podemos usar o método &lt;code&gt;plot&lt;/code&gt; para uma
visualização
rápida:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(cit)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/citacoes_rbcp-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;um-resumo&#34;&gt;Um resumo&lt;/h2&gt;

&lt;p&gt;Esses são alguns dos usos do &lt;code&gt;rscielo&lt;/code&gt; para extrair dados e metadados de
publicações. Para saber mais sobre ele funciona, consulte a
&lt;a href=&#34;https://cran.r-project.org/package=rscielo&#34; target=&#34;_blank&#34;&gt;documentação oficial&lt;/a&gt; e a
&lt;a href=&#34;https://github.com/meirelesff/rscielo&#34; target=&#34;_blank&#34;&gt;home dele no Github&lt;/a&gt;, ou dê uma
olhada na tabela abaixo, que resume o que cada uma de suas funções
faz:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Função&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Dados&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Uso&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conteúdo de artigos&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article(id_artigo)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_footnotes&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Notas de artigos&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_footnotes(id_artigo)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_id&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ID de artigos&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_id(url_artigo)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_meta&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Metadados de artigos&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_meta(id_artigo)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_references&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bibliografia de artigos&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_article_references(id_artigo)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Metadados de artigos&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal(issn)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_id&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ISSN de periódico&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_if(url_periodico)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_info&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Descrição de periódico&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_info(issn)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_metrics&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Citações de periódico&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_metrics(issn)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_lista&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Lista de periódico&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;get_journal_list()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;sobre-os-dados&#34;&gt;Sobre os dados&lt;/h2&gt;

&lt;p&gt;Enquanto trabalhávamos no &lt;code&gt;rscielo&lt;/code&gt;, tivemos que lidar inúmeras vezes
com informações incompletas e erros de formatação nos dados contidos na
base do Scielo. Em muitos casos, isso ocorre por razões diretas – quando
um periódico não inclui determinadas informações, ou quando as inclui
sem seguir uma formatação adequada. Em outros casos, problemas podem
ocorrer quando se tenta extrair o texto de um artigo apenas disponível
em formato PDF, por exemplo. Por todas essas razões, cautela é
necessária ao usar o &lt;code&gt;rscielo&lt;/code&gt; em análises ou publicações.&lt;/p&gt;

&lt;h1 id=&#34;final&#34;&gt;Final&lt;/h1&gt;

&lt;p&gt;Com o &lt;code&gt;rscielo&lt;/code&gt;, agora é possível obter em pouco tempo milhares de
informações que podem ajudar pesquisadoras e estudantes a realizar
análises bibliográficas, revisões sistemáticas, &lt;em&gt;text minining&lt;/em&gt;
aplicado à atividade científica, entre outros. Como essa é a primeira
versão do &lt;code&gt;rscielo&lt;/code&gt;, certamente ainda há bastante espaço para
implementar novas funcionalidade e melhorar as já existentes. Críticas e
sugestões, nesse sentido, são bem-vindas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>electionsBR 0.3.1: novos dados e funcionalidades</title>
      <link>https://fmeireles.com/blog/rstats/electionsbr-novos-dados-e-funcionalidades/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/rstats/electionsbr-novos-dados-e-funcionalidades/</guid>
      <description>

&lt;p&gt;Depois de alguns meses sem novidades, hoje lançamos um nova atualização
do &lt;a href=&#34;http://electionsbr.com/&#34; target=&#34;_blank&#34;&gt;electionsBR&lt;/a&gt;, o nosso pacote no R criado
para extrair dados eleitorais do &lt;a href=&#34;http://www.tse.jus.br/eleicoes/estatisticas/repositorio-de-dados-eleitorais-1/repositorio-de-dados-eleitorais&#34; target=&#34;_blank&#34;&gt;Repositório do
TSE&lt;/a&gt;.
Para além de tudo que o &lt;em&gt;software&lt;/em&gt; já fazia, agora adicionamos a ele
suporte para extração de todos os dados da última eleição, de 2018, além
de correções que devem torná-lo mais estável e maduro. Esperamos que
essa seja, digamos, a sua versão definitiva.&lt;/p&gt;

&lt;h1 id=&#34;obtendo-dados-eleitorais-com-o-electionsbr&#34;&gt;Obtendo dados eleitorais com o &lt;code&gt;electionsBR&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;Para quem não o conhece ou nunca o usou, o &lt;code&gt;electionsBR&lt;/code&gt; faz
essencialmente três tarefas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1)  Conectar o R ao &lt;a href=&#34;http://www.tse.jus.br/eleicoes/estatisticas/repositorio-de-dados-eleitorais-1/repositorio-de-dados-eleitorais&#34; target=&#34;_blank&#34;&gt;Repositório do
    TSE&lt;/a&gt;
    para baixar as informações eleitorais, fazendo o gerenciamento
    de diretórios e de arquivos;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2)  Extrair e carregar as diversas planilhas dentro de cada arquivo
    compactado (tarefa que, feita de forma manual, pode levar
    horas);&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3)  Unir, limpar e consolidar as diversas informações em um banco de
    dados pronto para análise, que pode ser exportado diretamente
    para análise em &lt;em&gt;softwares&lt;/em&gt; como Stata e SPSS (basta habilitar o
    argumento &lt;code&gt;export&lt;/code&gt; disponível na maioria das funções).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essas tarefas são realizadas por algumas
&lt;a href=&#34;http://electionsbr.com/reference/index.html&#34; target=&#34;_blank&#34;&gt;funções&lt;/a&gt;, uma para cada
tipo de informação eleitoral. Assim, para obter dados sobre as
candidaturas individuais nas eleições de 2014, por exemplo, basta usar a
função &lt;code&gt;candidate_fed&lt;/code&gt;; para eleições municipais, a função
correspondente é &lt;code&gt;candidate_local&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ao todo, o pacote passa a contar com 21 funções nessa versão, que
permitem extrair e limpar em segundos tanto resultados desagregados por
seções eleitorais quanto informações sobre as declarações de bens de
cada candidatura. Para além disso, ampliamos a já extensa documentação
do pacote, em inglês, sobre a origem e a natureza de cada informação
extraída por meio dele.&lt;/p&gt;

&lt;p&gt;Para saber mais detalhes sobre como usar o &lt;code&gt;electionsBR&lt;/code&gt;, as seguintes
referências podem ajudar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://electionsbr.com/&#34; target=&#34;_blank&#34;&gt;electionsbr.com&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fmeireles.com/blog/rstats/electionsbr-uma-nova-versao&#34; target=&#34;_blank&#34;&gt;electionsBR: uma nova
versão&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://denissonsilva.com/programando-em-r/16-electionsbr&#34; target=&#34;_blank&#34;&gt;electionsBR (blog
post)&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://electionsbr.com/articles/introduction.html&#34; target=&#34;_blank&#34;&gt;Introduction to the electionsBR
package&lt;/a&gt;
(tutorial em inglês).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;novas-funcionalidades&#34;&gt;Novas funcionalidades&lt;/h1&gt;

&lt;p&gt;A principal funcionalidade que adicionamos, para além das pequenas
melhorias de código, foi um argumento chamado &lt;code&gt;br_archive&lt;/code&gt; na maioria
das funções do pacote. Quando ele é colocado como &lt;code&gt;TRUE&lt;/code&gt;, as funções do
pacote retornam apenas o conteúdo de arquivos com sufixo &lt;code&gt;_BR&lt;/code&gt;, que
contém dados nacionais de uma determinada eleição – o que economiza
tempo no processamento dos dados quando alguém deseja, por exemplo,
obter apenas resultados de eleições presidenciais. Quando deixado como
&lt;code&gt;FALSE&lt;/code&gt;, o &lt;code&gt;electionsBR&lt;/code&gt; usa todas as planilhas baixadas do TSE para
construir o banco demandado pela(o) usuária(o).&lt;/p&gt;

&lt;p&gt;Na prática, o uso dessa opção pode trazer problemas, como dados
insuficientes ou duplicados. Infelizmente, isso ocorre porque o próprio
TSE mantém em seu repositório oficial arquivos que são incompletos ou
duplicados. Por conta disso, nossa recomendação é usar cada função dos
dois modos.&lt;/p&gt;

&lt;h1 id=&#34;outras-alterações&#34;&gt;Outras alterações&lt;/h1&gt;

&lt;p&gt;Entre outras coisas, essa versão corrige pequenos problemas apontados
por diversas pessoas ao longo do último ano (fica aqui, novamente, o
nosso agradecimento a todas).&lt;/p&gt;

&lt;p&gt;Talvez mais importante, alteramos a forma com que o &lt;code&gt;electionsBR&lt;/code&gt;
carregava os dados. Até a última versão, esse trabalho era feito pela
&lt;code&gt;fread&lt;/code&gt; do
&lt;a href=&#34;https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html&#34; target=&#34;_blank&#34;&gt;data.table&lt;/a&gt;
em pouquíssimo tempo. Por conta da inclusão de dados no TSE,
especialmente em formato diferente dos que eram públicos até então,
tivemos que alterar a API de leitura do pacote para evitar erros. A
partir de agora, o &lt;code&gt;electionsBR&lt;/code&gt; é movido por &lt;code&gt;read_delim&lt;/code&gt; do
&lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34;&gt;tidyverse&lt;/a&gt;, mais flexível.&lt;/p&gt;

&lt;h1 id=&#34;dados-das-eleições-de-2018&#34;&gt;Dados das eleições de 2018&lt;/h1&gt;

&lt;p&gt;A partir dessa versão, o &lt;code&gt;electionsBR&lt;/code&gt; passa a contar, de forma estável,
com todos os dados das eleições de 2018. Como o TSE ampliou a cobertura
de informações registradas de seus dados mais recentes, isso significa
que o &lt;code&gt;electionsBR&lt;/code&gt; retorna agora bases maiores – com mais variáveis –
para esses pleitos. Ao mesmo tempo, também atualizamos a documentação
das funções usadas para extrair dados de eleições gerais (i.e., as
funções com sufixo &lt;code&gt;_fed&lt;/code&gt;) para descrever o conteúdo das novas
colunas.&lt;/p&gt;

&lt;p&gt;A título de exemplo, quem coletar dados sobre as candidaturas à Câmara
dos Deputados de 2018, obtidas com &lt;code&gt;candidate_fed(2018)&lt;/code&gt;, poderá notar
que, agora, existe um variável chamada &lt;code&gt;SITUACAO_REELEICAO&lt;/code&gt;. Como o nome
sugere, essa variável indica quais candidaturas foram realizadas por
pessoas que já foram eleitas para o mesmo cargo anteriormente. Como dá
para ver no gráfico abaixo, pouco mais de 400 incumbentes tentaram suas
reeleições ano
passado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/reeleicao_camara.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Para saber quais informações estão disponíveis para as eleições de 2018,
basta consultar a documentação das funções &lt;code&gt;_fed&lt;/code&gt; (usando
&lt;code&gt;help(candidate_fed)&lt;/code&gt;, por exemplo).&lt;/p&gt;

&lt;h1 id=&#34;instalação&#34;&gt;Instalação&lt;/h1&gt;

&lt;p&gt;A nova versão do &lt;code&gt;electionsBR&lt;/code&gt; já está disponível no repositório oficial
de pacotes para R, o &lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt;. Para
instalá-lo diretamente, rode:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;electionsBR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eventualmente, uma nova versão &lt;em&gt;pre-release&lt;/em&gt; ficará disponível no
&lt;a href=&#34;https://github.com/silvadenisson/electionsBR&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt; do pacote (onde
também é possível postar dúvidas e sugestões). Para instalar essa, é
possível executar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!require(&amp;quot;devtools&amp;quot;)) install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;silvadenisson/electionsBR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Carreiras políticas na Câmara dos Deputados: Uma análise quase-experimental</title>
      <link>https://fmeireles.com/publication/carreiras-camara-deputados/</link>
      <pubDate>Mon, 31 Dec 2018 23:00:00 -0300</pubDate>
      
      <guid>https://fmeireles.com/publication/carreiras-camara-deputados/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Legislative Representation in a Multilevel System: The Case of Brazil</title>
      <link>https://fmeireles.com/publication/legislative-representation-brazil/</link>
      <pubDate>Mon, 31 Dec 2018 23:00:00 -0300</pubDate>
      
      <guid>https://fmeireles.com/publication/legislative-representation-brazil/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Partisan alignment and requests for federal transfers in Brazil</title>
      <link>https://fmeireles.com/publication/alinhamento-partidario-demanda/</link>
      <pubDate>Mon, 31 Dec 2018 23:00:00 -0300</pubDate>
      
      <guid>https://fmeireles.com/publication/alinhamento-partidario-demanda/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Usando R: Um Guia Para Cientistas Políticos</title>
      <link>https://fmeireles.com/publication/livro-r-cientistas-politicos/</link>
      <pubDate>Mon, 31 Dec 2018 23:00:00 -0300</pubDate>
      
      <guid>https://fmeireles.com/publication/livro-r-cientistas-politicos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Deflacionando séries com o deflateBR</title>
      <link>https://fmeireles.com/blog/rstats/deflacionar-series-no-r-deflatebr/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/rstats/deflacionar-series-no-r-deflatebr/</guid>
      <description>

&lt;p&gt;Deflacionar séries é pré-requisito em qualquer análise sobre o valor do
dinheiro ao longo do tempo. E embora não seja algo complexo, isso
envolve várias etapas que consomem tempo, todas sujeitas a erro humano:
obter dados históricos de algum índice de preços; compatibilizar as
datas da série nominal que se quer corrigir com a série do índice de
preços; calcular o ajuste; refazer o processo caso seja necessário usar
outro índice de preços. Em suma, deflacionar séries acaba sempre tomando
mais tempo do que deveria.&lt;/p&gt;

&lt;p&gt;Para realizar essa tarefa de uma forma mais rápida e replicável, usando
cinco dos índices de preços mais populares no Brasil, criei um pacote
para &lt;code&gt;R&lt;/code&gt;: o &lt;code&gt;deflateBR&lt;/code&gt;. A partir de uma série de reais nominais, ele
obtém as séries de índices de preços atualizadas diretamente da API do
IPEA e, em segundos, retorna os valores corrigidos – usando a
metodologia adotada pelo &lt;a href=&#34;https://www3.bcb.gov.br/CALCIDADAO/publico/metodologiaCorrigirIndice.do?method=metodologiaCorrigirIndice&#34; target=&#34;_blank&#34;&gt;Banco
Central&lt;/a&gt;.
Segue um breve descrição do pacote.&lt;/p&gt;

&lt;h3 id=&#34;como-funciona-o-deflatebr&#34;&gt;Como funciona o deflateBR?&lt;/h3&gt;

&lt;p&gt;O &lt;code&gt;deflateBR&lt;/code&gt; automatiza três processos para deflacionar uma série.
Primeiro, ele extrai dados de um dos seguintes índices de preços da API
do IPEA: IPCA e INPC, desenvolvidos pelo IBGE; e IGP-M, IGP-DI e IPC,
desenvolvidos pela FGV. Segundo, ele compatibiliza as datas mensais
desses índices com as datas dos valores nominais da série. Feito isso,
enfim, ele deflaciona e retorna os valores corrigidos.&lt;/p&gt;

&lt;p&gt;A função principal do pacote, &lt;code&gt;deflate&lt;/code&gt;, requer apenas três argumentos:
um vetor numérico de valores nominais; um vetor com as datas nominais; e
uma data de referência no formato MM/AAAA. Um exemplo usando o IPCA:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Carrega o pacote
library(deflateBR)

# Deflaciona 100 reais de janeiro de 2000
deflate(nominal_values = 100, nominal_dates = as.Date(&amp;quot;2000-01-01&amp;quot;), real_date = &amp;quot;01/2018&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

## [1] 310.3893
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por padrão, a função &lt;code&gt;deflate&lt;/code&gt; esse índice. Podemos alterar isso com
outro argumento chamado &lt;code&gt;index&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;deflate(100, as.Date(&amp;quot;2000-01-01&amp;quot;), &amp;quot;01/2018&amp;quot;, index = &amp;quot;igpm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

## [1] 372.1672
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Passando o valor &lt;code&gt;igpm&lt;/code&gt; para o argumento, a função usa o IGP-M como
indexador. Os demais indexadores possíveis são: &lt;code&gt;ipc&lt;/code&gt; para o IPC;
&lt;code&gt;igpdi&lt;/code&gt; para o IGP-DI; &lt;code&gt;inpc&lt;/code&gt; para o INPC. Para sabermos 100 reais de
janeiro de 1995 valeriam hoje segundo esse último, bastaria usar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;deflate(100, as.Date(&amp;quot;1995-01-01&amp;quot;), &amp;quot;01/2018&amp;quot;, &amp;quot;inpc&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

## [1] 491.0543
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;deflacionando-séries-maiores&#34;&gt;Deflacionando séries maiores&lt;/h3&gt;

&lt;p&gt;Mais útil do que corrigir um único valor é corrigir séries inteiras, com
várias quantias em reais nominais associadas a algum período específico.
Para mostrar como a função &lt;code&gt;deflate&lt;/code&gt; faz isso, podemos criar os seguinte
&lt;code&gt;data.frame&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dados &amp;lt;- data.frame(reais = seq(1, 5),
                    datas = seq.Date(from = as.Date(&amp;quot;2001-01-01&amp;quot;), by = &amp;quot;month&amp;quot;, length.out = 5),
                    stringsAsFactors = FALSE
                     )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Feito isso, temos agora dados fictícios, com valores de 1 a 5 observados
desde janeiro até maio de 2001. Suponha que queremos deflacionar esses
valores para janeiro de 2017 usando o IPC da FGV. Como fazer isso?
Apenas mudando o jeito de passar as informações necessárias para a
função &lt;code&gt;deflate&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;deflate(dados$reais, dados$datas, &amp;quot;01/2017&amp;quot;, &amp;quot;ipc&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

## [1]  2.759569  5.484001  8.193400 10.863809 13.464326
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;combinando-o-deflatebr-com-o-tidyverse&#34;&gt;Combinando o deflateBR com o tidyverse&lt;/h3&gt;

&lt;p&gt;Para quem usa o conjunto de pacotes contidos no &lt;code&gt;tidyverse&lt;/code&gt;, a função
&lt;code&gt;deflate&lt;/code&gt; pode ser usada dentro de &lt;code&gt;mutate()&lt;/code&gt; ou similares. Adaptando o
exemplo anterior:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)

dados %&amp;gt;%
  mutate(reais_deflacionados = deflate(reais, datas, &amp;quot;01/2017&amp;quot;, &amp;quot;ipc&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

##   reais      datas reais_deflacionados
## 1     1 2001-01-01            2.759569
## 2     2 2001-02-01            5.484001
## 3     3 2001-03-01            8.193400
## 4     4 2001-04-01           10.863809
## 5     5 2001-05-01           13.464326
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;outras-funções&#34;&gt;Outras funções&lt;/h3&gt;

&lt;p&gt;Para facilitar o uso de cada um dos cinco índices de preços, também
incluí no pacote &lt;code&gt;deflateBR&lt;/code&gt; cinco funções auxiliares. Em vez de usar a
função &lt;code&gt;deflate&lt;/code&gt; com o argumento &lt;code&gt;index = &amp;quot;ipca&amp;quot;&lt;/code&gt; para deflacionar pelo
IPCA, é possível fazer isso:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ipca(dados$reais, dados$datas, &amp;quot;01/2017&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

## [1]  2.847600  5.662908  8.455458 11.231286 13.958171
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ou, para usar o IGP-DI, o seguinte:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;igpdi(dados$reais, dados$datas, &amp;quot;01/2017&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

## [1]  3.385977  6.738949 10.074312 13.325380 16.471004
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por fim, o pacote &lt;code&gt;deflateBR&lt;/code&gt; também contém uma função simples, chamada
&lt;code&gt;inflation&lt;/code&gt;, para identificar a variação percentual na inflação entre
dois períodos. Se quisermos saber qual foi a taxa de inflação em 2017
segundo o IPCA, por exemplo, basta rodar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;inflation(&amp;quot;01/2017&amp;quot;, &amp;quot;12/2017&amp;quot;, &amp;quot;ipca&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Downloading necessary data from IPEA&#39;s API
## ...

## [1] 2.947421
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como o resultado está em percentual, podemos dizer que a taxa de
inflação em 2017, medida pelo IPCA, foi de 2.95%, &lt;a href=&#34;http://agenciabrasil.ebc.com.br/economia/noticia/2018-01/inflacao-oficial-pelo-ipca-em-2017-e-de-295-menor-taxa-desde-1998&#34; target=&#34;_blank&#34;&gt;conforme também
reportado oficialmente pelo
IBGE&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;exemplo-de-aplicação-1-o-valor-do-salário-mínimo&#34;&gt;Exemplo de aplicação 1: o valor do salário mínimo&lt;/h3&gt;

&lt;p&gt;Deflacionar séries é útil para ver como o poder de compra de salários ou
outros variam ao longo do tempo. O salário mínimo, por exemplo, cresceu
ou não acima da inflação? É possível responder a essa pergunta ajustando
os salários nominais em cada período específico com um índice de preços,
como o IPCA. Fazendo isso com o pacote &lt;code&gt;deflateBR&lt;/code&gt;, podemos ver que o
mínimo realmente cresceu acima da inflação desde
1995.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/salario_minimo-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;exemplo-de-aplicação-2-o-valor-de-bolsas-de-pós-graduação&#34;&gt;Exemplo de aplicação 2: o valor de bolsas de pós-graduação&lt;/h3&gt;

&lt;p&gt;Um bom exemplo de categoria que não teve aumento de renda acima da
inflação de 1995 a 2018 foram pós-graduandos que recebem bolsas de
estudos da Capes. Fixadas há anos nos mesmos patamares – R$ 2200 para
Doutorado, R$ 1500 para Mestrado –, a inflação não reposta se reflete em
perda de poder de compra da categoria.[1] Como dá pra ver, o valor dos
benefícios, hoje, praticamente voltaram aos patamares do início do
primeiro governo
Lula.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/bolsa_capes-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;validade&#34;&gt;Validade&lt;/h3&gt;

&lt;p&gt;Como já dito, o &lt;code&gt;deflateBR&lt;/code&gt; usa a fórmula convencional para corrigir
valores nominais pela inflação: multiplicá-lo pela razão entre o índice
de preços no período de referência e no período observado, assim como a
&lt;a href=&#34;https://www3.bcb.gov.br/CALCIDADAO/publico/metodologiaCorrigirIndice.do?method=metodologiaCorrigirIndice&#34; target=&#34;_blank&#34;&gt;calculadora disponibilizada pelo Banco
Central&lt;/a&gt;.
Os resultados do pacote e desse serviço, por essa razão, são
iguais.[2]&lt;/p&gt;

&lt;h3 id=&#34;como-instalar&#34;&gt;Como instalar&lt;/h3&gt;

&lt;p&gt;Para instalar a versão disponível no
&lt;a href=&#34;https://cran.r-project.org/package=deflateBR&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt; do pacote, basta
executar o seguinte códido:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;deflateBR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;final&#34;&gt;Final&lt;/h3&gt;

&lt;p&gt;Como procurei mostrar, o pacote &lt;code&gt;deflateBR&lt;/code&gt; faz rapidamente, e de forma
replicável, correções de valores nominais pela inflação. De qualquer
forma, por ser ainda a primeira versão dele, certamente existem várias
coisas por implementar ou melhorar. Para quem quiser sugerir melhorias
como essas ou outras, o código do pacote está disponível no
&lt;a href=&#34;https://github.com/meirelesff/deflateBR&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;. Críticas e sugestões,
como sempre, são bem-vindos.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Os dados sobre os períodos de ajustes nas bolsas foram retirados
&lt;a href=&#34;https://revistacantareira.files.wordpress.com/2012/09/ultimo-artigo1.pdf&#34; target=&#34;_blank&#34;&gt;daqui&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Em todos os testes que realizei, os resultados sempre foram
praticamente idênticos – com algumas diferenças na terceira e,
raramente, na segunda casa decimal, provavelmente por conta de algum
arredondamento realizado pela ferramenta online do BC.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>The Distributive Politics of Cabinet Ministers</title>
      <link>https://fmeireles.com/publication/distributive-politics-cabinet/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 -0300</pubDate>
      
      <guid>https://fmeireles.com/publication/distributive-politics-cabinet/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Predizendo sexo a partir de nomes próprios com o genderBR</title>
      <link>https://fmeireles.com/blog/rstats/predizendo-sexo-nomes-proprios-genderbr/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/rstats/predizendo-sexo-nomes-proprios-genderbr/</guid>
      <description>

&lt;p&gt;Para quem trabalha com bases de dados públicas, não é incomum encontrar
o seguinte problema: ter disponível em alguma coluna o nome de várias
pessoas, mas não a informação sobre o sexo delas. Para lidar com esse
problema, há alguns meses desenvolvi um pacote para &lt;code&gt;R&lt;/code&gt;, o
&lt;a href=&#34;https://cran.r-project.org/web/packages/genderBR/index.html&#34; target=&#34;_blank&#34;&gt;genderBR&lt;/a&gt;,
que oferece um método simples para resolvê-lo: usando dados do &lt;a href=&#34;https://censo2010.ibge.gov.br/nomes/&#34; target=&#34;_blank&#34;&gt;Censo
de 2010 do IBGE&lt;/a&gt;, ele inferie o
sexo de uma pessoa a partir de seu nome próprio (como descrito em
maiores detalhes
&lt;a href=&#34;http://fmeireles.com/blog/rstats/genderbr-predizer-sexo&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;).
Comparado à tarefa manual de classificar sexo a partir desses nomes, o
método não só é infinitamente mais rápido, mas também evita erros de
imputação, tornando replicável qualquer pesquisa que o use.&lt;/p&gt;

&lt;p&gt;Apesar da utilidade do pacote para resolver esse problema, ele fazia
isso com algumas limitações. A principal delas é a de tempo gasto na
tarefa, às vezes na casa de horas ou dias. Basicamente, isso ocorre por
causa da forma com que a principal função do pacote, &lt;code&gt;get_gender&lt;/code&gt;, faz
predições: para cada nome solicitado, ela envia uma requisição ao
serviço online de nomes do IBGE (daqui para frente,
&lt;a href=&#34;https://pt.wikipedia.org/wiki/Interface_de_programa%C3%A7%C3%A3o_de_aplica%C3%A7%C3%B5es&#34; target=&#34;_blank&#34;&gt;API&lt;/a&gt;),
recebe as informações necessárias e, com base nelas, calcula a
probabilidade desse nome pertencer a um a homem ou a uma mulher. Como
esse processo consome cerca de 0.1 segundos, as consequências são
inevitáveis: para 10 mil nomes, a função pode facilmente rodar por mais
de 15 horas.&lt;/p&gt;

&lt;p&gt;A partir da recém lançada versão do pacote, contudo, isso deixou de ser
um problema. Aproveitando que o IBGE divulgou a &lt;a href=&#34;http://www.consultaesic.cgu.gov.br/busca/dados/Lists/Pedido/Item/displayifs.aspx?List=0c839f31-47d7-4485-ab65-ab0cee9cf8fe&amp;amp;ID=557307&amp;amp;Web=88cc5f44-8cfe-4964-8ff4-376b5ebb3bef&#34; target=&#34;_blank&#34;&gt;base de dados que
alimenta a API do serviço de
nomes&lt;/a&gt;,
agora o &lt;code&gt;genderBR&lt;/code&gt; dispõe internamente dessas informações.
Especificamente, a função &lt;code&gt;get_gender&lt;/code&gt; ganhou um argumento opcional,
&lt;code&gt;internal&lt;/code&gt;, que permite escolher entre usar os dados internos do pacote
(&lt;code&gt;internal = TRUE&lt;/code&gt;, que agora é o padrão) ou requisitar os dados da API
(&lt;code&gt;internal = FALSE&lt;/code&gt;). Optando pelo primeiro, o processo de predizer
nomes consome poucos segundos – e isso mesmo em bases com milhares ou
milhões de nomes próprios.[1]&lt;/p&gt;

&lt;h3 id=&#34;como-usar-o-genderbr&#34;&gt;Como usar o genderBR&lt;/h3&gt;

&lt;p&gt;O primeiro passo para usar o &lt;code&gt;genderBR&lt;/code&gt; é simples: com o &lt;code&gt;R&lt;/code&gt; aberto, só
é necessário executar &lt;code&gt;install.packages(&amp;quot;genderBR&amp;quot;)&lt;/code&gt; para instalá-lo.
Feito isso, predizer sexo a partir de nomes próprios é uma questão de
chamar a função &lt;code&gt;get_gender&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Carrega o pacote
library(genderBR)

# Prediz o sexo de oito nomes
nomes &amp;lt;- c(&amp;quot;Guilherme&amp;quot;, &amp;quot;Maria&amp;quot;, &amp;quot;Ana&amp;quot;, &amp;quot;Arnaldo&amp;quot;, &amp;quot;Martha&amp;quot;, &amp;quot;Carlos&amp;quot;, &amp;quot;Almir&amp;quot;, &amp;quot;Cida&amp;quot;)
get_gender(nomes)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Male&amp;quot;   &amp;quot;Female&amp;quot; &amp;quot;Female&amp;quot; &amp;quot;Male&amp;quot;   &amp;quot;Female&amp;quot; &amp;quot;Male&amp;quot;   &amp;quot;Male&amp;quot;   &amp;quot;Female&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mais útil que isso, é possível predizer o sexo de nomes contidos numa
base de dados, adicionando o resultado dessa predição numa nova
variável.
Exemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;base &amp;lt;- data.frame(nome = c(&amp;quot;Ana Maria&amp;quot;, &amp;quot;Roberto Silva&amp;quot;, &amp;quot;Marcia Campos&amp;quot;),
                   idade = c(25, 42, 33),
                   grupo = c(&amp;quot;A&amp;quot;, &amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;)
                   )

base$sexo &amp;lt;- get_gender(base$nome)

base
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##            nome idade grupo   sexo
## 1     Ana Maria    25     A Female
## 2 Roberto Silva    42     A   Male
## 3 Marcia Campos    33     B Female
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos dois casos, as predições usam os dados internos ao pacote. Para
desabilitar essa opção, fazendo requisições diretamente à API do IBGE,
basta declarar como falso o argumento &lt;code&gt;internal&lt;/code&gt;: &lt;code&gt;get_gender(nomes,
internal = FALSE)&lt;/code&gt;. Como mostro na sequência, entretanto, usar essa
opção consome muito mais tempo.&lt;/p&gt;

&lt;h3 id=&#34;o-desempenho-da-nova-versão-do-genderbr&#34;&gt;O desempenho da nova versão do genderBR&lt;/h3&gt;

&lt;p&gt;Quão rápido é predizer o sexo usando os dados internos do pacote
&lt;code&gt;genderBR&lt;/code&gt;? A título de ilustração, podemos comparar o tempo gasto para
predizer o sexo daqueles 8 nomes do primeiro exemplo usando a API do
IBGE, i.e. &lt;code&gt;internal = FALSE&lt;/code&gt;, e os dados internos do pacote, &lt;code&gt;internal
= TRUE&lt;/code&gt;. Repeti essa operação 100 vezes com cada método, registrando o
tempo gasto para concluir a predição em cada uma. Resultado: com os
dados internos, o pacote leva cerca de 0.06 segundos para concluir a
predição dos 8 nomes, em média; já usando a API do IBGE, o tempo
necessário gira em torno de 1.4 segundos. Em outras palavras, o novo
método adicionado ao pacote é cerca de 23 vezes mais rápido nesse
exemplo.&lt;/p&gt;

&lt;p&gt;Na verdade, usar os dados internos é ainda mais rápido se levarmos em
conta as pausas entre requisições, aplicadas pela função &lt;code&gt;get_gender&lt;/code&gt;
quando o número de nomes a serem consultados na API do IBGE excede 100.
Além disso, os ganhos em escala do método interno são imensos porque ele
consome quase o mesmo tempo para predizer o sexo de 100, 1000, ou 10000
nomes. Isso, de novo, não acontece ao usar a opção &lt;code&gt;internal = FALSE&lt;/code&gt;
para extrair dados da API do IBGE.&lt;/p&gt;

&lt;p&gt;Em resumo, predizer sexo a partir de nomes próprios com o &lt;code&gt;genderBR&lt;/code&gt;
ficou extremamente mais rápido.&lt;/p&gt;

&lt;h3 id=&#34;exemplo-sexo-de-autores-de-teses-de-doutorado-no-brasil&#34;&gt;Exemplo: sexo de autores de teses de Doutorado no Brasil&lt;/h3&gt;

&lt;p&gt;Para exemplificar os usos do pacote &lt;code&gt;genderBR&lt;/code&gt;, classifiquei o sexo de
autores(as) de todas as 221990 teses de Doutorado defendidas no Brasil
entre 1987 e 2016. Esses dados vêm do &lt;a href=&#34;http://catalogodeteses.capes.gov.br/catalogo-teses/#!/&#34; target=&#34;_blank&#34;&gt;Banco de Teses e Dissertações da
Capes&lt;/a&gt;,
disponíveis no novo &lt;a href=&#34;https://dadosabertos.capes.gov.br/&#34; target=&#34;_blank&#34;&gt;portal de dados
abertos&lt;/a&gt; da instituição – onde
também estão outros sobre a composição dos programas de pós-graduação
no país, ou sobre a produção acadêmica de doscentes e discentes, por
exemplo.&lt;/p&gt;

&lt;p&gt;O importante a notar é que a Capes disponibiliza apenas informações
sobre instituição, área de avaliação e nome dos autores das teses
defendidas no período, mas não o sexo de quem as defendeu.[2] É aí que
entra o &lt;code&gt;genderBR&lt;/code&gt;: usando os dados internos do pacote, predizer o sexo
para todos os nomes na base leva &lt;em&gt;menos de 5 segundos&lt;/em&gt;. Com essa
informação, podemos criar um gráfico como esse.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/genderbr1-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O gráfico acima ilustra bem o trabalho do &lt;code&gt;genderBR&lt;/code&gt;: ele classificou a
imensa maioria dos nomes como pertencendo a homens ou mulheres (96% do
total). Ainda assim, como os dados disponibilizados pelo IBGE incluem
apenas nomes com mais de 20 ocorrências no país, alguns na base da
Capes, cerca de 3% deles, foram classificados como &lt;em&gt;Desconhecido&lt;/em&gt;, o que
indica que não encontraram correspondência. Em outros casos, nomes
classificados podem ser tanto de homens quanto de mulheres – como Ariel,
Darci, Noá e Elir, por exemplo –, dificultando a tarefa de atribuir sexo
(os &lt;em&gt;Unissex&lt;/em&gt; do gráfico). De qualquer forma, como é possível ver, ambos
os casos são residuais.&lt;/p&gt;

&lt;p&gt;Voltando ao gráfico, dá para notar que mulheres defenderam cerca de
metade das teses registradas no banco da Capes no período. Entretanto,
como o número de defesas era pequeno até os anos 2000 – em 1987, por
exemplo, apenas 939 teses defendidas foram registradas, e mesmo em 2000
esse número ainda era de apenas 5344 –, acompanhar o crescimento
absoluto, ano a ano, dessa série dificulta detectar tendências. Por essa
razão, podemos focar apenas na percentagem de teses defendidas por
mulheres, excluindo da base pessoas com sexo classificado como
&lt;em&gt;Desconhecido&lt;/em&gt; ou &lt;em&gt;Unissex&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/genderbr2-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A tendência geral, agora, é clara: com o passar do tempo, mulheres
aumentaram sua participação na defesa de teses no Brasil.&lt;/p&gt;

&lt;h4 id=&#34;defesas-de-tese-por-grandes-áreas&#34;&gt;Defesas de tese por grandes áreas&lt;/h4&gt;

&lt;p&gt;O mesmo padrão, entretanto, certamente varia entre áreas: pode ser que
mulheres defendam mais teses em algumas grandes áreas da Capes, menos em
outras. Como o Banco de Teses contém variáveis indicando essas grandes
áreas, verificar isso é relativamente simples.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/genderbr3-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Por um lado, mulheres defendem mais teses no Brasil, ao menos nos
últimos anos. Por outro lado, é possível ver que essa participação é
desigual entre grandes áreas da Capes: mulheres defendem mais teses nas
Ciências Biológicas, nas Humanas e nas Letras; homens, entretanto, estão
sobrerrepresentados nas áreas de Engenharia e Exatas. O gradual aumento
no número de mulheres defendendo teses não ocorreu nessas duas últimas.&lt;/p&gt;

&lt;h4 id=&#34;defesas-de-tese-por-área-de-avaliação&#34;&gt;Defesas de tese por área de avaliação&lt;/h4&gt;

&lt;p&gt;Enquanto que classificar o sexo de autores(as) de teses por grande área
revela um cenário detalhado da participação de mulheres, é possível ir
além com os dados da Capes. Em especial, podemos usar a classificação
por área de avaliação, que é usada para classificar os programas de
pós-graduação no país. Aqui, vou fazer isso para algumas dessas: para a
Ciência Política, separadamente, e em algumas outras, mais próximas
dessa. Os resultados, também aqui, mostram que mulheres participam mais
na produção e defesa de teses em algumas áreas; já em outras, inclusa a
Ciência Política, a presença delas fica aquém – às vezes muito aquém –
da de homens.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/genderbr4-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://fmeireles.com/figs/genderbr5-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;final&#34;&gt;Final&lt;/h3&gt;

&lt;p&gt;Classificar por sexo autores(as) de teses no Brasil é apenas uma das
utilidades do &lt;code&gt;genderBR&lt;/code&gt;. Usando as mesmas fontes de dados, na verdade,
é possível investigar as causas da variação na participação de homens e
mulheres na produção de teses; mapear a distribuição de docentes e
discentes por sexo em todos os programas de pós-graduação; ou, ainda,
aplicar o mesmo método para classificar qualquer outro tipo de produção
por sexo do(a) autor(a). Isso tudo, note-se, apenas com os dados da
Capes, o que está longe de esgotar todas as aplicações possíveis do
pacote.&lt;/p&gt;

&lt;p&gt;A mensagem mais geral desse texto, entretanto, é outra: com a nova
atualização, usar o &lt;code&gt;genderBR&lt;/code&gt; para predizer sexo a partir de nomes
próprios ficou muito mais rápido. Como o exemplo anterior indica, isso
pode ser feito em poucos segundos mesmo em bases de dados grandes;
quando os nomes próprios estão formatados de diferentes maneiras; e
levando em conta diferenças no uso de nomes por sexo entre estados (ver
&lt;a href=&#34;http://fmeireles.com/blog/rstats/genderbr-predizer-sexo&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;) – nesse
caso, usando a API do IBGE. Como já discuti no
&lt;a href=&#34;http://fmeireles.com/blog/rstats/genderbr-predizer-sexo&#34; target=&#34;_blank&#34;&gt;texto&lt;/a&gt; da
versão anterior do pacote, as predições do &lt;code&gt;genderBR&lt;/code&gt;, além disso, são
bastante precisas: nos testes que realizei, o método prediz o sexo a
partir de um nome de forma correta mais de 99% das vezes, além de
produzir poucos &lt;em&gt;missings&lt;/em&gt;, como no caso do exemplo anterior. Tudo
somado, o &lt;code&gt;genderBR&lt;/code&gt; não só é incomparavelmente mais rápido do que
classificar manualmente sexo a partir de nomes, mas também mais
recomendado para evitar erros de imputação e contribuir para a
replicabilidade de qualquer pesquisa que o use.&lt;/p&gt;

&lt;h4 id=&#34;dados-e-cógido&#34;&gt;Dados e cógido&lt;/h4&gt;

&lt;p&gt;Os dados e o código usados nesse posto podem ser encontrados
&lt;a href=&#34;https://github.com/meirelesff/teses_capes&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;. Como o pacote
&lt;code&gt;genderBR&lt;/code&gt; é open source, o que significa que qualquer um pode consultar ou trabalhar em
cima do seu código, disponível no
&lt;a href=&#34;https://github.com/meirelesff/genderBR&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;. Críticas e sugestões
são bem-vindos.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A única ressalva, aqui, é que esse método só está disponível quando
outro argumento, &lt;code&gt;state&lt;/code&gt;, não é declarado. Com isso, apenas pela API
do IBGE é possível obter predições considerando variação entre
estados.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Os dados do Banco de Teses e Dissertações da Capes têm muitos
problemas, como &lt;em&gt;missings&lt;/em&gt;, campos preenchidos de forma incorreta,
incosistência de classificação em alguns anos, entre outros. Como
meu objetivo é apenas exemplificar o pacote, fiz uma limpeza
superficial na base. Os dados e o código usados nesse post, de
qualquer forma, podem ser encontrados aqui.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>genderBR: predizendo sexo a partir de nomes próprios</title>
      <link>https://fmeireles.com/blog/rstats/genderbr-predizer-sexo/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/rstats/genderbr-predizer-sexo/</guid>
      <description>

&lt;p&gt;Várias questões importantes nas Ciências Sociais estão ligadas ao sexo das pessoas. Se quisermos saber se mulheres recebem menores salários, se estão sub-representadas na política, se sofrem mais com as violências urbana e doméstica, entre outros, precisamos identificar o sexo das pessoas que investigamos. Entretanto, esse dado nem sempre é fácil de obter: vários bancos usados para responder às perguntas acima não contêm informações sobre o sexo das pessoas estudadas &amp;ndash; embora alguns destes contenham outras que podem ser usada para inferir seus sexos.&lt;/p&gt;

&lt;p&gt;O pacote &lt;code&gt;genderBR&lt;/code&gt; para o &lt;code&gt;R&lt;/code&gt;, que acabou de ser publicado no &lt;a href=&#34;https://cran.r-project.org/package=genderBR&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt;, serve para isso: ele usa uma informação relativamente simples de obter &amp;ndash; nome próprio &amp;ndash; e, a partir dela, prediz o sexo de uma pessoa com dados do &lt;a href=&#34;http://censo2010.ibge.gov.br/&#34; target=&#34;_blank&#34;&gt;Censo de 2010 realizado pelo IBGE&lt;/a&gt;. Se o nome João, por exemplo, é usado majoritariamente por individuos do sexo masculino no Brasil, temos alguma confiança em dizer que outro brasileiro qualquer com o mesmo nome provavelmente também seja do sexo masculino. Entre outras vantagens, este método é replicável, baseado em dados públicos e, o que é mais importante, muito mais rápido do que qualquer classificação manual de sexos a partir de nomes próprios. O passo-a-passo a seguir exemplifica isso.&lt;/p&gt;

&lt;h2 id=&#34;como-instalar&#34;&gt;Como instalar&lt;/h2&gt;

&lt;p&gt;Como o pacote &lt;code&gt;genderBR&lt;/code&gt; está no &lt;a href=&#34;https://cran.r-project.org/package=genderBR&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt; e, portanto, pode ser instalado diretamente pelo &lt;code&gt;R&lt;/code&gt; com:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;genderBR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ou, para versões beta do pacote, ele pode ser instalado com &lt;code&gt;devtools&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(!require(&amp;quot;devtools&amp;quot;)) install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;meirelesff/genderBR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Feito isso, para usar o pacote, basta carregá-lo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(genderBR)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;como-usar&#34;&gt;Como usar&lt;/h2&gt;

&lt;p&gt;O pacote &lt;code&gt;genderBR&lt;/code&gt; possui uma função principal, &lt;code&gt;get_gender&lt;/code&gt;, que prediz o sexo de uma pessoa baseado no seu primeiro nome (com ou sem letras maiúsculas, acentos e sobrenomes), como no exemplo abaixo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_gender(&amp;quot;maria&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Female&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_gender(&amp;quot;MARIA&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Female&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_gender(&amp;quot;Maria da Silva Conceição&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Female&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A função funciona igualmente com um vetor de nomes:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_gender(c(&amp;quot;isabel&amp;quot;, &amp;quot;marta&amp;quot;, &amp;quot;silvia&amp;quot;, &amp;quot;rodrigo&amp;quot;, &amp;quot;roberto&amp;quot;, &amp;quot;thiago&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Female&amp;quot; &amp;quot;Female&amp;quot; &amp;quot;Female&amp;quot; &amp;quot;Male&amp;quot;   &amp;quot;Male&amp;quot;   &amp;quot;Male&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Resumidamente, esta chamada envia uma requisição GET a &lt;a href=&#34;http://censo2010.ibge.gov.br/nomes/&#34; target=&#34;_blank&#34;&gt;API do Censo 2010&lt;/a&gt; (que pode demorar a responder), calcula a proporção de mulheres que possuem o nome passado e, então, faz uma predição baseado num ponto de corte: por padrão, se mais de 0.9 das pessoas com o nome passado são do sexo feminino, segundo o Censo de 2010, a função prediz o sexo deste nome como &lt;em&gt;Female&lt;/em&gt;; se mais 0.9 das pessoas com esse nome forem do sexo masculino, a predição será &lt;em&gt;Male&lt;/em&gt;; por fim, nomes com proporções menores que 0.9 ou não encontrados na base do IBGE são classificados como &lt;em&gt;missing&lt;/em&gt; (e.g., &lt;code&gt;NA&lt;/code&gt;) Exemplos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Male
get_gender(&amp;quot;joao&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Male&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# NA
get_gender(&amp;quot;muriel&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] NA
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# NA
get_gender(&amp;quot;ashdfjg&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] NA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;É possível modificar a proporção usada para classificar corretamente um nome. Por exemplo, podemos considerar como do sexo masculino apenas pessoas cujo primeiro nome seja usado por 0.95 (95%) de pessoas identificadas como do sexo masculino pelo IBGE:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_gender(&amp;quot;augusto&amp;quot;, threshold = 0.95)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Male&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Além deste resulto básico, a função &lt;code&gt;get_gender&lt;/code&gt; também permite saber a proporção de mulheres que usam um dado primeiro nome no país &amp;ndash; com isto, é possível usar qualquer outra medida para predizer o sexo de uma pessoa. No exemplo abaixo, percebe-se que a probabilidade de alguém com o nome Muriel ser do sexo feminino no universo de entrevistados do Censo de 2010 é igual a 43%.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_gender(&amp;quot;muriel&amp;quot;, prob = TRUE)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 0.4303515
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por fim, podemos obter os resultados por estado &amp;ndash; partido da ideia de que o uso de um dado nome próprio entre sexos pode variar de região para região. Um bom exemplo é o do político goiano Iris Rezende, casado com sua xará Iris de Araújo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Probabilidade do nome Iris ser usado por uma mulher em SP
get_gender(&amp;quot;iris&amp;quot;, prob = TRUE, state = &amp;quot;SP&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 0.9491027
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Probabilidade do nome Iris ser usado por uma mulher em GO
get_gender(&amp;quot;iris&amp;quot;, prob = TRUE, state = &amp;quot;GO&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 0.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como o exemplo acima mostra, o nome Iris é muito mais comum para pessoas do sexo masculino em Goiás do que em São Paulo.&lt;/p&gt;

&lt;h2 id=&#34;outras-funções&#34;&gt;Outras funções&lt;/h2&gt;

&lt;p&gt;Além da função &lt;code&gt;get_gender&lt;/code&gt;, o pacote &lt;code&gt;genderBR&lt;/code&gt; possui outras duas funções que podem ser úteis em algumas situações. A primeira delas, &lt;code&gt;get_states&lt;/code&gt;, serve para retornar um &lt;code&gt;data.frame&lt;/code&gt; com o nome, a sigla e o código do IBGE de todos os estados brasileiros, o que pode ajudar nas consultas à função &lt;code&gt;get_gender&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Já a segunda função, &lt;code&gt;map_gender&lt;/code&gt;, serve para mapear os usos de um nome qualquer entre todos os estados do Brasil:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;map_gender(&amp;quot;mario&amp;quot;, gender = &amp;quot;f&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 19 x 6
##                   nome    uf  freq populacao  sexo  prop
##  *               &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;     &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
##  1            Amazonas    13    60   3483985     f  1.72
##  2               Piauí    22    30   3118360     f  0.96
##  3      Rio de Janeiro    33   140  15989929     f  0.88
##  4 Rio Grande do Norte    24    23   3168027     f  0.73
##  5           São Paulo    35   293  41262199     f  0.71
##  6               Ceará    23    56   8452381     f  0.66
##  7      Santa Catarina    42    41   6248436     f  0.66
##  8         Mato Grosso    51    19   3035122     f  0.63
##  9          Pernambuco    26    54   8796448     f  0.61
## 10            Maranhão    21    40   6574789     f  0.61
## 11                Pará    15    46   7581051     f  0.61
## 12      Espírito Santo    32    21   3514952     f  0.60
## 13               Bahia    29    84  14016906     f  0.60
## 14             Alagoas    27    17   3120494     f  0.54
## 15             Paraíba    25    20   3766528     f  0.53
## 16              Paraná    41    55  10444526     f  0.53
## 17   Rio Grande do Sul    43    48  10693929     f  0.45
## 18        Minas Gerais    31    79  19597330     f  0.40
## 19               Goiás    52    20   6003788     f  0.33
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nela, basta passar as letras &lt;code&gt;f&lt;/code&gt;, para &lt;em&gt;Female&lt;/em&gt;, ou &lt;code&gt;m&lt;/code&gt;, para &lt;em&gt;Male&lt;/em&gt;, e a função retorna o total de pessoas em cada estado com o nome fornecido, além do total de usos daquele nome no sexo indicado.&lt;/p&gt;

&lt;h1 id=&#34;avaliando-as-predições&#34;&gt;Avaliando as predições&lt;/h1&gt;

&lt;p&gt;O método é confiável? Depois de ter feitos alguns testes, a precisão média do método sempre foi maior que 95%, sem sinal de viés. Aqui, vou exemplificar isso com um exemplo simples: os dados de candidaturas do TSE (extraídos com o &lt;a href=&#34;http://electionsbr.com/&#34; target=&#34;_blank&#34;&gt;electionsBR&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Basicamente, candidatos a cargos eletivos no Brasil reportam seus sexos no formulário de registro de suas candidaturas, informação que, posteriormente, é disponibilizada pelo TSE. Apesar de possíveis erros de mensuração &amp;ndash; afinal, estes dados são auto-reportados e, como tal, estão sujeitos até mesmo a erros de imputação &amp;ndash;, o &lt;code&gt;genderBR&lt;/code&gt; faz um bom trabalho de classificar o sexo dos 104122 candidatos a cargos federais nas cinco eleições entre 1998 e 2014, como mostra a tabela abaixo.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Sexo declarado&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Sexo predito&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;N&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;%&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;410&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.5%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;79485&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;95.5%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unissex&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1121&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.3%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unknown&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2201&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.6%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19796&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;94.7%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;106&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.5%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unissex&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;348&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.7%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unknown&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;655&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Especificamente, o método classificou 99.5% das observações corretamente (desconsiderando os &lt;em&gt;missings&lt;/em&gt;, que são mostrados aqui como &lt;em&gt;Unissex&lt;/em&gt;, quando a proporção de usos do nome pelo sexo feminino ou masculino é menor que 0.9, ou &lt;em&gt;Unknown&lt;/em&gt;, quando o nome não foi encontrado na base do TSE), e apenas 2.74% ficaram como &lt;em&gt;missing&lt;/em&gt;. No geral, portanto, o método funciona.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magnitude eleitoral e representação de mulheres nos municípios brasileiros</title>
      <link>https://fmeireles.com/publication/magnitude-eleitoral-mulheres/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 -0300</pubDate>
      
      <guid>https://fmeireles.com/publication/magnitude-eleitoral-mulheres/</guid>
      <description></description>
    </item>
    
    <item>
      <title>electionsBR: versão 0.3.0</title>
      <link>https://fmeireles.com/blog/rstats/electionsbr-versao-0.3.0/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/rstats/electionsbr-versao-0.3.0/</guid>
      <description>

&lt;p&gt;O pacote do &lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34;&gt;R&lt;/a&gt; para baixar e limpar dados eleitorais do TSE criado pelo Denisson Silva, Beatriz Costa e eu, o &lt;a href=&#34;http://electionsbr.com/&#34; target=&#34;_blank&#34;&gt;electionsBR&lt;/a&gt;, acaba de ganhar uma grande atualização, já disponível no &lt;a href=&#34;https://cran.r-project.org/web/packages/electionsBR/index.html&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt;: para a versão 0.3.0[1]. Para quem não o conhece, basicamente ele automatiza o trabalho de baixar, deszipar, tratar e limpar dados eleitorais brasileiros diretamente do &lt;a href=&#34;http://www.tse.jus.br/eleicoes/estatisticas/repositorio-de-dados-eleitorais&#34; target=&#34;_blank&#34;&gt;Repositório de Dados Eleitorais do TSE&lt;/a&gt; &amp;ndash; tudo acompanhado de extensa documentação baseada em informações oficiais. Em outras palavras, com ele é possível extrair quase todos os dados públicos de resultados eleitorais, apuração, partidos, coligações, candidaturas, de perfil dos eleitores, entre outros, diretamente pelo R, e isto em pouquíssimo tempo.&lt;/p&gt;

&lt;p&gt;Nesta nova versão, estendemos as funcionalidades do pacote em vários pontos, mas sem comprometer a forma com que ele já funcionava. Segue, em forma de lista, as novidades do pacote.&lt;/p&gt;

&lt;h3 id=&#34;velocidade&#34;&gt;Velocidade&lt;/h3&gt;

&lt;p&gt;O &lt;a href=&#34;http://electionsbr.com/&#34; target=&#34;_blank&#34;&gt;electionsBR&lt;/a&gt; já era extremamente rápido (em poucos segundos ele é capaz de baixar e processar centenas de milhares de informações do &lt;em&gt;website&lt;/em&gt; do TSE), especialmente comparado à tarefa manual de baixar separadamente os arquivos do TSE, tratar e limpar cada um para, enfim, unir todos numa base única.&lt;/p&gt;

&lt;p&gt;Nessa versão, melhoramos esse desempenho ainda mais: alteramos internamente as formas de leitura e união dos arquivos por meio das funções &lt;code&gt;fread&lt;/code&gt; e &lt;code&gt;rbindlist&lt;/code&gt; do pacote &lt;a href=&#34;https://cran.r-project.org/package=data.table&#34; target=&#34;_blank&#34;&gt;data.table&lt;/a&gt;. Com isso, o pacote ficou cerca de 6x mais rápido do que já era.&lt;/p&gt;

&lt;h3 id=&#34;resultados-por-estado&#34;&gt;Resultados por estado&lt;/h3&gt;

&lt;p&gt;Anteriormente, só era possível pegar dados eleitorais para todo o Brasil com o pacote &amp;ndash; o que significa que, caso desejássemos ter resultados apenas para um ou mais estados, teríamos que extrair dados do país todo para, aí sim, filtrar as informações.&lt;/p&gt;

&lt;p&gt;Agora, a maioria das funções possui um argumento opcional chamado &lt;code&gt;uf&lt;/code&gt;, que serve para indicar estados para os quais queremos dados &amp;ndash; e isto de forma eficiente, sem ter de processar informações dos demais estados. Para pegar dados sobre as candidaturas (nome, sexo, partido, número de urna, profissão, entre outros, dos[as] candidatos[as]) nas eleições federais de 2010 apenas em Minas Gerais, por exemplo, podemos fazer isso:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Instala a nova versão do pacote 
# (é preciso descomentar a linha abaixo)
# install.packages(&amp;quot;electionsBR&amp;quot;)

# Carrega o pacote
library(electionsBR)

# Pega dados de candidaturas em 2010 apenas para Minas Gerais
mg2010 &amp;lt;- candidate_fed(2010, uf = &amp;quot;MG&amp;quot;)

# Um panorama dos dados
mg2010
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 1,789 × 43
##    DATA_GERACAO HORA_GERACAO ANO_ELEICAO NUM_TURNO DESCRICAO_ELEICAO
##           &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;             &amp;lt;chr&amp;gt;
## 1    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 2    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 3    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 4    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 5    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 6    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 7    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 8    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 9    19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## 10   19/02/2016     19:56:37        2010         1     ELEIÇÕES 2010
## # ... with 1,779 more rows, and 38 more variables: SIGLA_UF &amp;lt;chr&amp;gt;,
## #   SIGLA_UE &amp;lt;chr&amp;gt;, DESCRICAO_UE &amp;lt;chr&amp;gt;, CODIGO_CARGO &amp;lt;chr&amp;gt;,
## #   DESCRICAO_CARGO &amp;lt;chr&amp;gt;, NOME_CANDIDATO &amp;lt;chr&amp;gt;,
## #   SEQUENCIAL_CANDIDATO &amp;lt;chr&amp;gt;, NUMERO_CANDIDATO &amp;lt;chr&amp;gt;,
## #   CPF_CANDIDATO &amp;lt;chr&amp;gt;, NOME_URNA_CANDIDATO &amp;lt;chr&amp;gt;,
## #   COD_SITUACAO_CANDIDATURA &amp;lt;chr&amp;gt;, DES_SITUACAO_CANDIDATURA &amp;lt;chr&amp;gt;,
## #   NUMERO_PARTIDO &amp;lt;chr&amp;gt;, SIGLA_PARTIDO &amp;lt;chr&amp;gt;, NOME_PARTIDO &amp;lt;chr&amp;gt;,
## #   CODIGO_LEGENDA &amp;lt;chr&amp;gt;, SIGLA_LEGENDA &amp;lt;chr&amp;gt;, COMPOSICAO_LEGENDA &amp;lt;chr&amp;gt;,
## #   NOME_COLIGACAO &amp;lt;chr&amp;gt;, CODIGO_OCUPACAO &amp;lt;chr&amp;gt;, DESCRICAO_OCUPACAO &amp;lt;chr&amp;gt;,
## #   DATA_NASCIMENTO &amp;lt;chr&amp;gt;, NUM_TITULO_ELEITORAL_CANDIDATO &amp;lt;chr&amp;gt;,
## #   IDADE_DATA_ELEICAO &amp;lt;chr&amp;gt;, CODIGO_SEXO &amp;lt;chr&amp;gt;, DESCRICAO_SEXO &amp;lt;chr&amp;gt;,
## #   COD_GRAU_INSTRUCAO &amp;lt;chr&amp;gt;, DESCRICAO_GRAU_INSTRUCAO &amp;lt;chr&amp;gt;,
## #   CODIGO_ESTADO_CIVIL &amp;lt;chr&amp;gt;, DESCRICAO_ESTADO_CIVIL &amp;lt;chr&amp;gt;,
## #   CODIGO_NACIONALIDADE &amp;lt;chr&amp;gt;, DESCRICAO_NACIONALIDADE &amp;lt;chr&amp;gt;,
## #   SIGLA_UF_NASCIMENTO &amp;lt;chr&amp;gt;, CODIGO_MUNICIPIO_NASCIMENTO &amp;lt;chr&amp;gt;,
## #   NOME_MUNICIPIO_NASCIMENTO &amp;lt;chr&amp;gt;, DESPESA_MAX_CAMPANHA &amp;lt;chr&amp;gt;,
## #   COD_SIT_TOT_TURNO &amp;lt;chr&amp;gt;, DESC_SIT_TOT_TURNO &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Também é possível pegar dados de mais de um estado por vez passando um vetor para a função:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Pega dados de estados da região sul
sul &amp;lt;- candidate_fed(2010, uf = c(&amp;quot;RS&amp;quot;, &amp;quot;SC&amp;quot;, &amp;quot;PR&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As siglas dos estados podem ser passadas em maiúsculo, minúsculo ou combinação dos dois: &lt;code&gt;MG&lt;/code&gt;, &lt;code&gt;mg&lt;/code&gt;, &lt;code&gt;Mg&lt;/code&gt; ou &lt;code&gt;mG&lt;/code&gt; são todos &lt;code&gt;inputs&lt;/code&gt; igualmente válidos.&lt;/p&gt;

&lt;h3 id=&#34;percentual-de-votos&#34;&gt;Percentual de votos&lt;/h3&gt;

&lt;p&gt;Para além das funções que o pacote já tinha (&lt;a href=&#34;http://electionsbr.com/reference/index.html&#34; target=&#34;_blank&#34;&gt;ver aqui&lt;/a&gt; uma descrição de todas as funções disponíveis), incluímos quatro funções para facilitar a extração de resultados eleitorais, que já retornam o percentual de votos válidos (nominais e de legenda somados) de cada partido nas eleições presidenciais, para o Senado e para a Câmara Federal agregados por estado ou por município. Estas funções são, respectivamente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;president_mun_vote&lt;/code&gt;, para votação percentual nas eleições presidenciais no segundo turno por município;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;president_state_vote&lt;/code&gt;, para votação percentual nas eleições presidenciais no segundo turno por estado;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;legislative_mun_vote&lt;/code&gt;, para votação percentual nas eleições legislativas federais (Senado e Câmara) por município;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;legislative_state_vote&lt;/code&gt;, para votação percentual nas eleições legislativas federais (Senado e Câmara) por município.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No caso das eleições legislativas, as funções aceitam um argumento opcional, &lt;code&gt;house&lt;/code&gt; indicando a casa a ser analisada, se Senado ou Câmara (&lt;code&gt;senate&lt;/code&gt; ou &lt;code&gt;chamber&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Por exemplo, o código abaixo pega os resultados presidenciais do segundo turno de 2014 por estado:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pres &amp;lt;- president_state_vote(2010)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E o abaixo pega o total de votos percentuais de cada partido na disputa para a Câmara Federal em 2010, por estado:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cam &amp;lt;- legislative_state_vote(2010, house = &amp;quot;chamber&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;vagas-em-disputa&#34;&gt;Vagas em disputa&lt;/h3&gt;

&lt;p&gt;Também acrescentamos uma função para coletar dados sobre o número de cadeira para cada cargo em disputa (&lt;code&gt;seats_fed&lt;/code&gt;, para eleições federais, e &lt;code&gt;seats_local&lt;/code&gt;, para eleições municipais). Para saber quantas vagas nas Câmara municipais estavam disponíveis em cada município em 2016, por exemplo, use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vagas &amp;lt;- seats_local(2016)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;exportar-dados-para-stata-e-spss&#34;&gt;Exportar dados para Stata e SPSS&lt;/h3&gt;

&lt;p&gt;Para quem não usa, ou não tem tanta familiaridade com o &lt;code&gt;R&lt;/code&gt;, incluímos uma opção para exportar os dados pegos pelas funções do pacote para arquivos &lt;code&gt;.dta&lt;/code&gt; e &lt;code&gt;.sav&lt;/code&gt;, que podem ser analisados pelo Stata e pelo SPSS, respectivamente. O argumento opcional para fazer isso é o &lt;code&gt;export&lt;/code&gt;, que, por padrão, é igual a &lt;code&gt;FALSE&lt;/code&gt;. Para exportar os resultados das funções, é só passar ele para &lt;code&gt;TRUE&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Resultados eleitorais federais de 2010, agregados por zona eleitoral
df &amp;lt;- vote_mun_zone_fed(2010, export = TRUE)

# Resultados eleitorais municipais de 2012, agregados por zona eleitoral
df2 &amp;lt;- vote_mun_zone_local(2012, export = TRUE)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;siglas-de-estados-e-partidos&#34;&gt;Siglas de estados e partidos&lt;/h3&gt;

&lt;p&gt;Para consultar uma lista de siglas de estados e partidos, que pode ser útil para filtrar resultados, use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Sigla dos estados brasileiros
uf_br()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;AC&amp;quot; &amp;quot;AL&amp;quot; &amp;quot;AM&amp;quot; &amp;quot;AP&amp;quot; &amp;quot;BA&amp;quot; &amp;quot;CE&amp;quot; &amp;quot;DF&amp;quot; &amp;quot;ES&amp;quot; &amp;quot;GO&amp;quot; &amp;quot;MA&amp;quot; &amp;quot;MG&amp;quot; &amp;quot;MS&amp;quot; &amp;quot;MT&amp;quot; &amp;quot;PA&amp;quot;
## [15] &amp;quot;PB&amp;quot; &amp;quot;PE&amp;quot; &amp;quot;PI&amp;quot; &amp;quot;PR&amp;quot; &amp;quot;RJ&amp;quot; &amp;quot;RN&amp;quot; &amp;quot;RO&amp;quot; &amp;quot;RR&amp;quot; &amp;quot;RS&amp;quot; &amp;quot;SC&amp;quot; &amp;quot;SE&amp;quot; &amp;quot;SP&amp;quot; &amp;quot;TO&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Sigla dos partidos que disputaram a eleicao de 2016
parties_br()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;PPS&amp;quot;     &amp;quot;PSB&amp;quot;     &amp;quot;PSOL&amp;quot;    &amp;quot;PP&amp;quot;      &amp;quot;PSL&amp;quot;     &amp;quot;PR&amp;quot;      &amp;quot;PSDB&amp;quot;   
##  [8] &amp;quot;PDT&amp;quot;     &amp;quot;PSDC&amp;quot;    &amp;quot;PHS&amp;quot;     &amp;quot;PT&amp;quot;      &amp;quot;PROS&amp;quot;    &amp;quot;PTC&amp;quot;     &amp;quot;PSC&amp;quot;    
## [15] &amp;quot;PC do B&amp;quot; &amp;quot;PRB&amp;quot;     &amp;quot;PMDB&amp;quot;    &amp;quot;DEM&amp;quot;     &amp;quot;PMB&amp;quot;     &amp;quot;PTB&amp;quot;     &amp;quot;PEN&amp;quot;    
## [22] &amp;quot;PTN&amp;quot;     &amp;quot;SD&amp;quot;      &amp;quot;PMN&amp;quot;     &amp;quot;PT do B&amp;quot; &amp;quot;PSD&amp;quot;     &amp;quot;PV&amp;quot;      &amp;quot;PRP&amp;quot;    
## [29] &amp;quot;REDE&amp;quot;    &amp;quot;PPL&amp;quot;     &amp;quot;PRTB&amp;quot;    &amp;quot;PSTU&amp;quot;    &amp;quot;PCB&amp;quot;     &amp;quot;PCO&amp;quot;     &amp;quot;NOVO&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;tutoriais&#34;&gt;Tutoriais&lt;/h3&gt;

&lt;p&gt;Para quem deseja ver um tutorial mais completo do funcionamento do &lt;a href=&#34;http://electionsbr.com&#34; target=&#34;_blank&#34;&gt;electionsBR&lt;/a&gt;, adicionamos uma &lt;code&gt;vignette&lt;/code&gt; ao pacote, que pode ser visto em:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://electionsbr.com/articles/index.html&#34; target=&#34;_blank&#34;&gt;http://electionsbr.com/articles/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Na mesma página, também existem outros tutoriais sobre em inglês e em português.&lt;/p&gt;

&lt;h3 id=&#34;website&#34;&gt;Website&lt;/h3&gt;

&lt;p&gt;Por fim, em vez de ter toda a documentação espalhada por aí, reunimos tudo num único &lt;em&gt;website&lt;/em&gt;, que agora é também o site oficial do projeto.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://electionsbr.com&#34; target=&#34;_blank&#34;&gt;http://electionsbr.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[1] Para instalar a nova versão, basta abrir o &lt;code&gt;R&lt;/code&gt; e executar no console o seguinte código: &lt;code&gt;install.packages(&amp;quot;electionsBR&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simulações de Monte Carlo no Ensino de Ciência Política</title>
      <link>https://fmeireles.com/publication/monte-carlo-ciencia-politica/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 -0300</pubDate>
      
      <guid>https://fmeireles.com/publication/monte-carlo-ciencia-politica/</guid>
      <description></description>
    </item>
    
    <item>
      <title>electionsBR: uma nova versão (0.2.0)</title>
      <link>https://fmeireles.com/blog/rstats/electionsbr-uma-nova-versao/</link>
      <pubDate>Tue, 13 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://fmeireles.com/blog/rstats/electionsbr-uma-nova-versao/</guid>
      <description>

&lt;p&gt;Obter dados eleitorais no Brasil nunca foi uma tarefa das mais fáceis. Quem já precisou fazer isso provavelmente sabe o tamanho do problema: baixar diversos arquivos, deszipá-los, abrir um a um os arquivos brutos, limpar e arrumar os dados, juntar tudo, exportar, e por aí vai. Foi com isso na cabeça que o &lt;a href=&#34;http://denissonsilva.com/&#34; target=&#34;_blank&#34;&gt;Denisson&lt;/a&gt;, a &lt;a href=&#34;mailto:bea.s.costa@gmail.com&#34; target=&#34;_blank&#34;&gt;Beatriz&lt;/a&gt; e eu lançamos, nos idos de agosto, o &lt;a href=&#34;http://fmeireles.com/blog/rstats/electionsbr-um-pacote-para-baixar-dados-eleitorais-do-tse&#34; target=&#34;_blank&#34;&gt;electionsBR&lt;/a&gt; - um pacote para baixar e limpar estes dados automaticamente, direto do &lt;a href=&#34;http://www.tse.jus.br/eleicoes/estatisticas/repositorio-de-dados-eleitorais&#34; target=&#34;_blank&#34;&gt;Repositório de Dados Eleitorais do TSE&lt;/a&gt;. Passado algum tempo, e depois dos diversos &lt;em&gt;feedbacks&lt;/em&gt; que recebemos, lançamos agora uma nova versão do &lt;code&gt;electionsBR&lt;/code&gt;, já disponível no CRAN[1]: a 0.2.0.&lt;/p&gt;

&lt;p&gt;Resumidamente, além de todas as funcionalidades existentes na versão anterior (era possível baixar quase todos os dados disponíveis do TSE e armazená-los em objetos na memória no R em segundos; para saber mais sobre a versão anterior, &lt;a href=&#34;%5BelectionsBR%5D(http://fmeireles.com/blog/rstats/electionsbr-um-pacote-para-baixar-dados-eleitorais-do-tse)&#34; target=&#34;_blank&#34;&gt;clique aqui&lt;/a&gt;), ampliamos a cobertura dela com diversos reparos e acréscimos. Destes, três se destacam:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Novas funções&lt;/strong&gt; - Incluímos duas novas funções, &lt;code&gt;voter_affiliation&lt;/code&gt; e &lt;code&gt;voter_profile&lt;/code&gt;, que coletam e limpam dados de filiação e de perfil demográfico dos(as) eleitores(as), respectivamente. Com elas, é possível saber, por exemplo, quantos(as) filiados(as) um partido possui em cada estado; nome, sexo, data de filiação e situação cadastral destes(as) filiados(as); o número de eleitores(as) registrados(as) em cada eleição desde 1998; além do sexo, faixa etária e grau de escolaridade dos(as) votantes. No &lt;code&gt;R&lt;/code&gt;, basta digitar &lt;code&gt;?voter_affiliation&lt;/code&gt;, ou &lt;code&gt;?voter_profile&lt;/code&gt;, para acessar a documentação completa destas funções.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Controle de acentos&lt;/strong&gt; - Seguindo uma sugestão dada pelo &lt;a href=&#34;http://robertmyles.github.io/&#34; target=&#34;_blank&#34;&gt;Robert McDonnel&lt;/a&gt;, adicionamos um argumento chamado &lt;code&gt;ascii&lt;/code&gt; em todas as funções. Basicamente, este remove acentos das informações do TSE - o que pode ser útil para computadores que não têm suporte para acentos latinos ou evitar erros em algumas operações com &lt;code&gt;strings&lt;/code&gt; (comparar nomes, por exemplo). Para remover acentos, só é necessário usar &lt;code&gt;ascii = TRUE&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Inclusão das eleições de 2016&lt;/strong&gt; - Agora também é possível obter os dados eleitorais das eleições municipais de 2016 pelo pacote (esta atualização, na verdade, já havia sido feito na versão beta, disponível no GitHub, por boa sugestão do &lt;a href=&#34;https://twitter.com/guilhermejd1&#34; target=&#34;_blank&#34;&gt;Guilherme Duarte&lt;/a&gt;). Todas as funções que coletam dados de eleições municipais (como &lt;code&gt;candidate_local&lt;/code&gt; ou &lt;code&gt;legend_local&lt;/code&gt;, por exemplo) aceitam esta opção: o usuário precisa apenas passar &lt;code&gt;2016&lt;/code&gt; para o argumento &lt;code&gt;year&lt;/code&gt; destas funções (e.g., &lt;code&gt;legend_local(year = 2016)&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tudo isto para que o &lt;code&gt;electionsBR&lt;/code&gt; dê mais opções ao usuário: qual dado eleitoral ele quer (agora, sim, o pacote cobre quase todos os dados); como ele quer as informações (com ou sem acentos) e para qual período (incluso as eleições de 2016).&lt;/p&gt;

&lt;h3 id=&#34;outras-novidades&#34;&gt;Outras novidades&lt;/h3&gt;

&lt;p&gt;Além destas três melhorias, também alteramos outros aspectos do &lt;code&gt;electionsBR&lt;/code&gt;. Em primeiro lugar, corrigimos alguns problemas no código da versão anterior que geravam erros. Em segundo lugar, e em parte por causa dessas correções, também tivemos de modificar a documentação técnica do pacote para registrar as alterações feitas; nesta nova versão, portanto, mais detalhes passaram a ser abordados na documentação oficial do pacote (&lt;a href=&#34;https://cran.r-project.org/web/packages/electionsBR/electionsBR.pdf&#34; target=&#34;_blank&#34;&gt;disponível neste link&lt;/a&gt;). Por fim, removemos algumas funções internas (i.e. menos confusão para os usuários) e deixamos todas as funções externas mais flexíveis (é possível, por exemplo, customizar o &lt;code&gt;encoding&lt;/code&gt; dos dados do TSE; para isso, basta definir o argumento, como &lt;code&gt;enconding = &amp;quot;UTF-8&amp;quot;&lt;/code&gt;, ou &lt;code&gt;enconding = &amp;quot;windows-1252&amp;quot;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Apesar destas mudanças, contudo, o funcionamento do pacote permanece o mesmo. Para baixar dados eleitorais, tanto com a versão anterior quanto com essa, só é necessário carregar o pacote numa sessão do R e chamar a função desejada. Um mini-exemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Instala a nova versao do electionsBR
install.packages(&amp;quot;electionsBR&amp;quot;)

# Carrega o pacote
library(&amp;quot;electionsBR&amp;quot;)

# Baixa dados de filiacao individuais do PT no estado de Sao Paulo
x &amp;lt;- voter_affiliation(party = &amp;quot;PT&amp;quot;, uf = &amp;quot;SP&amp;quot;)

# Baixa os mesmos dados, agora sem acentos nas informacoes textuais
x &amp;lt;- voter_affiliation(party = &amp;quot;PT&amp;quot;, uf = &amp;quot;SP&amp;quot;, ascii = TRUE)

# Baixa dados de filiacao individuais do PT e do PSDB nos estados de Minas Gerais e Bahia
x &amp;lt;- voter_affiliation(party = c(&amp;quot;PT&amp;quot;, &amp;quot;PSDB&amp;quot;), uf = c(&amp;quot;MG&amp;quot;, &amp;quot;BA&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;o-electionsbr&#34;&gt;O electionsBR&lt;/h3&gt;

&lt;p&gt;Para quem descobriu o pacote agora e/ou quer saber mais, segue abaixo uma lista de outros exemplos e tutoriais de como usá-lo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://fmeireles.com/blog/rstats/electionsbr-analisando-a-apuracao-das-eleicoes-para-a-camara-dos-deputados&#34; target=&#34;_blank&#34;&gt;electionsBR: o que é e como usar&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://fmeireles.com/blog/rstats/electionsbr-analisando-a-apuracao-das-eleicoes-para-a-camara-dos-deputados&#34; target=&#34;_blank&#34;&gt;Coletando e analisando dados de apuração eleitoral&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://fmeireles.com/blog/rstats/electionsbr-exportanto-dados-eleitorais-do-r-para-o-stata-spss&#34; target=&#34;_blank&#34;&gt;Exportando dados eleitorais para o Stata&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://blog.ibpad.com.br/index.php/2016/11/07/construindo-mapas-eleitorais-com-r-e-electionsbr/&#34; target=&#34;_blank&#34;&gt;Criando mapas eleitorais&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://fmeireles.com/files/electionsbr.pdf&#34; target=&#34;_blank&#34;&gt;electionsBR: R Functions to Download and Clean Brazilian Electoral Data&lt;/a&gt;, (paper acadêmico do pacote, para quem precisa de uma referência mais detalhada).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para publicações que usam o pacote, esta última fonte, o paper, pode ser citada. É possível obter a referência dela, tanto em texto já formatado quanto em &lt;code&gt;BibTeX&lt;/code&gt;, pela função &lt;code&gt;citation&lt;/code&gt;. Exemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Gera a informacao bibliografica para citar o electionsBR
citation(&amp;quot;electionsBR&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## To cite electionsBR in publications, please use:
## 
##   Meireles, F.; Silva, D.; Costa, B. (2016). electionsBR: R
##   functions to download and clean Brazilian electoral data.
##   Federal University of Minas Gerais (UFMG). Belo Horizonte,
##   Brazil. http://fmeireles.com/files/electionsbr.pdf
## 
## A BibTeX entry for LaTeX users is
## 
##   @Manual{,
##     title = {electionsBR: {R} Functions to Download and Clean {B}razilian Electoral Data},
##     author = {Fernando Meireles and Denisson Silva and Beatriz Costa},
##     organization = {Federal University of Minas Gerais (UFMG)},
##     address = {Belo Horizonte, Brazil},
##     year = {2016},
##     url = {http://fmeireles.com/files/electionsbr.pdf},
##   }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;notas-finais&#34;&gt;Notas finais&lt;/h3&gt;

&lt;p&gt;Como não poderia deixar de ser num projeto como este, nos beneficiamos muito da ajuda de diversas pessoas para fazer esta atualização. Em especial, nossos colegas do &lt;a href=&#34;http://www.centroestudoslegislativos.com.br/&#34; target=&#34;_blank&#34;&gt;Centro de Estudos Legislativos&lt;/a&gt; Suzana Alves, Haína Coelho, Felipe Lima, Leonardo Ev, Lucas Gelape, Bruno Arcas, e também Bruno Reis e Carlos Ranulfo; e os já mencionados Guilherme e Robert, além do &lt;a href=&#34;https://github.com/dfalbel&#34; target=&#34;_blank&#34;&gt;Daniel Falbel&lt;/a&gt;, &lt;a href=&#34;https://github.com/sillasgonzaga&#34; target=&#34;_blank&#34;&gt;Sillas Gonzaga&lt;/a&gt; e &lt;a href=&#34;https://github.com/flaviobarros&#34; target=&#34;_blank&#34;&gt;Flávio Barros&lt;/a&gt; (estes, pelo &lt;a href=&#34;https://github.com/silvadenisson/electionsBR&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt;) contribuíram com críticas e sugestões e, por isto, estamos indefinidamente em débito com todos(as).&lt;/p&gt;

&lt;p&gt;[1] CRAN, ou Comprehensive R Archive Network, é um repositório oficial de pacotes para o R.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
